#######M######I#####V#####E######G######E######C######I#######R######D#########
# Name:                 shave_polish_2.smk
# Author:               Loïc TALIGNANI
# Affiliation:          IRD_UMR224_MIVEGEC
# Aim:                  Snakefile for SHort-read Alignment pipeline for VEctor 
# Date:                 2022.10.05
# Run:                  snakemake -s workflow/rules/shave_polish_2.smk --profile slurm/
# Latest modification:  2023.01.25
# Done:                 Added cluster-config, get_threads(),

###############################################################################
# CONFIGURATION FILES #
configfile: "config/config.yaml"
cluster_config: "slurm/config.yaml"

import os, sys
from snakemake.utils import min_version
min_version("5.18.0")

###############################################################################
# WILDCARDS #
SAMPLE, = glob_wildcards("resources/reads/{sample}_R1.fastq.gz")

###############################################################################
# RESOURCES #
TMPDIR = config["resources"]["tmpdir"] # Temporary directory

###############################################################################
# PARAMETERS #
REFPATH = config["path"]                            # Path to genomes references
REFERENCE = config["reference"]                     # Genome reference sequence, in fasta format

###############################################################################
# FUNCTIONS AND COMMANDS #

############################## O N S T A R T ###################################
onstart:
    shell("mkdir -p Cluster_logs/")

################################## A L L #######################################
rule all:
    input:
        intervals = expand("results/04_Polishing/{sample}_bwa.intervals", sample=SAMPLE),
        bed = expand("results/04_Polishing/{sample}_bwa_realignertargetcreator.bed", sample=SAMPLE),
        bam= expand("results/04_Polishing/realigned/{sample}_bwa_md_realigned.bam", sample=SAMPLE),
        bai= expand("results/04_Polishing/realigned/{sample}_bwa_md_realigned.bai", sample=SAMPLE),

############################### R U L E S #####################################
rule indelrealigner:
    # Aim:  Mappers cannot “see” indels near ends of reads because mismatches are “cheaper” than a gap in this context.
    #       IndelRealigner takes a coordinate-sorted and indexed BAM and a target intervals file generated by RealignerTargetCreator.
    #       IndelRealigner then performs local realignment on reads coincident with the target intervals using consenses
    #       from indels present in the original alignment.
    # Use:  java -Xmx16G -Djava.io.tmpdir=/tmp -jar GenomeAnalysisTK.jar \
    #       -T IndelRealigner \
    #       -R human_g1k_v37_decoy.fasta \
    #       -targetIntervals realignertargetcreator.intervals \
    #       -known INDEL_chr10_1Mb_b37_1000G_phase3_v4_20130502.vcf \
    #       -I 7156_snippet.bam \
    #       -o 7156_snippet_indelrealigner.bam
    message:
        "Indel realignment"
    input:
        bam="results/02_Mapping/{sample}_bwa_sorted-mark-dup-fx.bam",
        bai="results/02_Mapping/{sample}_bwa_sorted-mark-dup-fx.bai",
        ref=REFPATH+REFERENCE,                                                            #"resources/genomes/GCA_018104305.1_AalbF3_genomic.fasta",
        fai="resources/genomes/Anopheles-gambiae-PEST_CHROMOSOMES_AgamP4.fa.fai",
        dict="resources/genomes/Anopheles-gambiae-PEST_CHROMOSOMES_AgamP4.dict",
        target_intervals="results/04_Polishing/{sample}_bwa.intervals"
    output:
        bam= "results/04_Polishing/realigned/{sample}_bwa_md_realigned.bam",
        bai= "results/04_Polishing/realigned/{sample}_bwa_md_realigned.bai",
    benchmark:
        "benchmarks/indelrealigner/{sample}_bwa.tsv",
    log:
        "results/11_Reports/indelrealigner/{sample}_bwa.log",
    params:
        extra="--defaultBaseQualities 20 --filter_reads_with_N_cigar",  # optional
    resources: cpus=12, mem_mb=12000, time_min=120
    shell:
        config["MODULES"]["GATK3"]+"""
            gatk3 -T IndelRealigner -I {input.bam} -R {input.ref} --targetIntervals {input.target_intervals} {params.extra} --out {output.bam}
        """
        
        #"java -jar GenomeAnalysisTK.jar -T IndelRealigner -I {input.bam} -R {input.ref} --targetIntervals {input.target_intervals} {params.extra} --out {output.bam}"

################################################################################
rule awk_intervals_for_IGV:
    # Aim: View intervals on IGV
    # Use: awk -F '[:-]' 'BEGIN { OFS = "\t" } { if( $3 == "") { print $1, $2-1, $2 } else { print $1, $2-1, $3}}' \
    #      realignertargetcreator.intervals > realignertargetcreator.bed
    message:
        "Awk IGV intervals visualization for {wildcards.sample} sample "
    input:
        intervals="results/04_Polishing/{sample}_bwa.intervals",
    resources: cpus=1, mem_mb=4000, time_min=120
    params:
        cmd = r"""'BEGIN { OFS = "\t" } { if( $3 == "") { print $1, $2-1, $2 } else { print $1, $2-1, $3}}'"""
    output:
        bed = "results/04_Polishing/{sample}_bwa_realignertargetcreator.bed",
    log:
        "results/11_Reports/awk/{sample}_bwa_intervals_for_IGV.log"
    shell:
        "awk -F '[:-]' {params.cmd} {input.intervals} 1> {output.bed} 2> {log}"

###############################################################################
rule realignertargetcreator:
    # Aim:      RealignerTargetCreator identify what regions need to be realigned.
    #           Local realignment around indels. Takes a coordinate-sorted and indexed BAM and a VCF of known indels and creates a target intervals file.
    # Use:      gatk3 -T RealignerTargetCreator \
    #           -R human_g1k_v37_decoy.fasta \
    #           -L 10:96000000-97000000 \
    #           -known INDEL_chr10_1Mb_b37_1000G_phase3_v4_20130502.vcf \
    #           -I 7156_snippet.bam \
    #           --out 7156_realignertargetcreator.intervals
    message:
        "RealignerTargetCreator creates a target intervals file for indel realignment"
    input:
        bam="results/02_Mapping/{sample}_bwa_sorted-mark-dup-fx.bam",
        bai="results/02_Mapping/{sample}_bwa_sorted-mark-dup-fx.bai",
        ref=REFPATH+REFERENCE,
        fai="resources/genomes/Anopheles-gambiae-PEST_CHROMOSOMES_AgamP4.fa.fai",
        dict="resources/genomes/Anopheles-gambiae-PEST_CHROMOSOMES_AgamP4.dict",
    output:
        "results/04_Polishing/{sample}_bwa.intervals",
    benchmark:
        "benchmarks/realignertargetcreator/{sample}_bwa.tsv",
    log:
        "results/11_Reports/realignertargetcreator/{sample}_bwa.log",
    params:
        extra="--defaultBaseQualities 20 --filter_reads_with_N_cigar",  # optional
    resources: cpus=8, mem_mb=12000, time_min=120
    shell:
        config["MODULES"]["GATK3"]+"""
            gatk3 -T RealignerTargetCreator --num_threads {threads} -R {input.ref} -I {input.bam} {params.extra} --out {output}
        """
        
        #"java -jar GenomeAnalysisTK.jar -T RealignerTargetCreator --num_threads {threads} -R {input.ref} -I {input.bam} {params.extra} --out {output} "

